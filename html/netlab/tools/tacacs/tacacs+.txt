" First, let me start by saying I began with a routine installaltion of OpenBSD 3.2, via ftp - I chose to install everything, including X, well, just because I felt like it. After this, I of course applied all of the latest patches, and recompiled the kernel. Onto the good stuff... 
I installed tacacs+ from the ports tree. You can also download tacacs+ from Cisco's ftp site, but installing is much easier from the ports tree. 

    cd ~/ports/net/tacacs+
    make install

I know there are other ways to install ports, this is just the method I most often choose. This installs the tac_plus daemon under /usr/local/sbin/tac_plus. It is upto you where you want the configuration file to go. 
  mkdir /usr/local/tac
  cd /usr/local/tac
  vi tac.conf

Choose whatever location/filename you're comfortable with. The guide is installed in /usr/local/share/doc/tacacs+/users_guide. This is a really good, and extensive guide, which covers both the router side configuration, as well as the tacacs+ configuration file. I chose to print it out, which came out to just over 40 pages. There is also a man page for tac_plus - 'man tac_plus'. Before you go on, note that you should have a working tacacs+ daemon running BEFORE you configure anything on the router. 
I kept the tacacs config file very simple, as right now, only one person needs access to the routers - me. 

#/usr/local/tac/tac.conf
user = myname
 {
  global = cleartext password_here
 )

user = $enab15$
{
  login = cleartext enable_passwd_here
}

This was the extent of my config file. Like I said, mine is pretty simple, since it is just me who needs access to the router. There are many more options, with great examples in the users_guide. It also provides for functionality that what is shown here. You can also only give persons access to only certain commands. Anyone needing this kind of functionality, it's here. You can also authenticate off of the /etc/passwd file. Before you start/test the tacacs daemon, add this to your /etc/services file: 
tacacs          49/tcp

What follows is the configuration on the routers needed to support tacacs+ authorization. 

enable secret local_enable_password
aaa new-model
tacacs-server host XX.XX.XX.XX
aaa authentication login default tacacs+
aaa authentication login default tacacs+ enable
aaa authentication enable default tacacs+

To start the tacacs+ daemon, simply run: 
/usr/local/sbin/tac_plus -C /usr/local/tac/tac.conf     

again, there are plenty more options available if you need them. 
After doing this, I set up a tftp server on my OpenBSD box also, as most people know who have worked with Cisco products, they love to use tftp servers. Uncomment the following line in /etc/inetd.conf - 

#tftp           dgram   udp     wait    root    /usr/libexec/tftpd      tftpd -s -c /tftpboot

Then send a sighup to inetd. I used the '-c' option because it allows files to be copied via tftp, if they aren't already created. Why this isn't the default, I dont know. Make sure the directory '/tftpboot' or whatever you choose has the proper permissions. For laziness sake, I do a chmod 777 /tftpboot. I use my tftp server to keep stored copies of the router configs incase I need them, as well as IOS'es for each router model on my network. 
