alias k="kubectl"
alias kp="kubectl get pods"

    1. Application Lifecycle Management
        1) Create a deployment from YAML
        2) Scaling up deployments
        3) Perform rollouts and rollbacks using YAML files

kubectl create deploy webapp2 --image=nginx:1.16-alpine-perl --dry-run -o yaml > webapp2.yaml
kubectl create -f webapp2.yaml
kubectl describe deployment webapp2 
kubectl get deployment webapp2  -o=wide
kubectl get pods -o=wide

Update the YAML to have 5 replicas and version 17 instead of 16

kubectl apply -f webapp2.yaml
kubectl rollout history deploy webapp2
kubectl rollout undo deploy webapp2
kubectl get deployment webapp2  -o=wide

Now letâ€™s say we want to scale up. You could edit the YAML file. There is also a kubectl scale command that can be used to specify the number of replicas. 

k scale --replicas=10 -f webapp2.yaml
kp -w
        4) Create cron jobs
        5) Create config maps
